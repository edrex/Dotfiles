# Read `man 5 sway` for a complete reference.

set $mod Mod4
set $left h
set $down j
set $up k
set $right l
# waiting for clipboard support
#set $term alacritty
#set $term kitty
set $term termite
set $menu  "rofi -combi-modi window,ssh,drun,run -show combi -modi combi"
#set $menu  "dmenu"
set $winmenu "i3-windows-and-run"

#assign [title="journal"] 8
bindsym $mod+i exec $term -e "journal -p" 
bindsym $mod+Shift+i exec $term -e "journal -pf"
bindsym $mod+Ctrl+s exec $term -e "screencap"
bindsym $mod+n exec "networkmanager_dmenu"

#output * bg /usr/share/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output eDP-1 scale 2 pos 0 0
output DP-1 pos -480 -1200
#output eDP-1 scale 2 pos 480 1080 
# bg /home/eric/Pictures/20181208_114838.jpg stretch

#/usr/share/wallpapers/DarkestHour/contents/images/2560x1440.jpg stretch
#output DP-1 pos 0 0 
# bg /usr/share/wallpapers/DarkestHour/contents/images/2560x1440.jpg stretch

input "1267:8400:ELAN_Touchscreen" map_to_output eDP-1
input "1739:30383:DLL075B:01_06CB:76AF_Touchpad" {
	tap enabled
	dwt enabled
}



exec swaymsg command seat "*" hide_cursor 5000
exec swayidle -w\
    timeout 300 'swaylock-blur -- -f' \
    timeout 1800 'systemctl suspend' \
    timeout 600 'swaymsg "output * dpms off"' \
       resume 'swaymsg "output * dpms on"' \
    before-sleep 'swaylock-blur -- -f'
exec mako

font pango:DejaVu Sans Mono 10
for_window [instance=mpv] floating enable, sticky enable
for_window [app_id="firefox"] inhibit_idle fullscreen
# for_window [shell="xdg"] title_format '[%app_id] %title'
for_window [shell="xdg"] title_format '%title'
for_window [shell="xwayland" ] title_format '[X11] %title'

bindsym $mod+Return exec $term
bindsym $mod+Shift+c kill
bindsym $mod+d exec $menu
bindsym $mod+Shift+d exec $winmenu
bindsym $mod+Shift+r reload

floating_modifier $mod normal
bindsym $mod+Shift+e exit

# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# _move_ the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# _move_ the focused window with the same, but add Shift
bindsym $mod+Ctrl+$left move workspace to output left
bindsym $mod+Ctrl+$down move workspace to output down
bindsym $mod+Ctrl+$up move workspace to output up
bindsym $mod+Ctrl+$right move workspace to output right
# ditto, with arrow keys
bindsym $mod+Ctrl+Left move workspace to output left
bindsym $mod+Ctrl+Down move workspace to output down
bindsym $mod+Ctrl+Up move workspace to output up
bindsym $mod+Ctrl+Right move workspace to output right
#
#
# Workspaces:
#
    # switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10
    # move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
    bindsym $mod+Shift+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle
    bindsym $mod+Shift+s sticky toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # move focus to the parent container
    bindsym $mod+a focus parent

		# focus the child container
		bindsym $mod+Shift+a focus child


#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
		bindsym $mod+Shift+grave move scratchpad
    # bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
		bindsym $mod+grave scratchpad show
    # bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10 px or 10 ppt
    bindsym $down resize grow height 10 px or 10 ppt
    bindsym $up resize shrink height 10 px or 10 ppt
    bindsym $right resize grow width 10 px or 10 ppt

    # ditto, with arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


bindsym $mod+Shift+b bar mode toggle

# targets currently active output
# http://blog.kopis.de/2015/07/21/changing-volume-using-pactl/
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume $(pactl list short sinks|grep RUNNING|awk '{print $1}') +5% #increase sound volume
bindsym XF86AudioLowerVolume exec pactl set-sink-volume $(pactl list short sinks|grep RUNNING|awk '{print $1}') -5% #decrease sound volume
bindsym XF86AudioMute exec pactl set-sink-mute $(pactl list short sinks|grep RUNNING|awk '{print $1}') toggle # mute sound

# Screen brightness controls
bindsym XF86MonBrightnessUp exec light -A 8 # increase screen brightness
bindsym XF86MonBrightnessDown exec light -U 8 # decrease screen brightness

# Media player controls
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous


#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     swaybar_command waybar
# }
bar {
  # status_command i3blocks
	tray_output primary
	status_command i3status
  colors {
    separator #666666
    background #000000
    statusline #ffffff
    focused_workspace #551a8b #551a8b #ffffff
    active_workspace #333333 #5f676a #ffffff
    inactive_workspace #000000 #000000 #888888
    urgent_workspace #2f343a #900000 #ffffff
  }
}

#client.focused #3b1261 #3b1261 #ffffff #662b9c
#client.focused_inactive #333333 #5f676a #ffffff #484e50
#client.unfocused #222222 #222222 #888888 #292d2e
#client.urgent #2f343a #900000 #ffffff #900000

include /etc/sway/config.d/*
